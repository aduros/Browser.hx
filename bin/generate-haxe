#!/usr/bin/env python

import json
import logging
import logging.config
import os

import database
import haxerenderer

current_dir = os.path.dirname(__file__)
root_dir = os.path.join(current_dir, "..")

logging.config.fileConfig(os.path.join(current_dir, "logging.conf"))
_logger = logging.getLogger("generate-haxe")

header = """//
// Browser.hx - JS externs for Haxe
// https://github.com/aduros/Browser.hx/blob/master/LICENSE.txt
//
// This file is generated, do not edit!

package browser;
"""

db = database.Database(os.path.join(root_dir, "database"))
db.LoadFromCache()

with open("mdn-js.json") as f:
    mdn_js = json.load(f)
with open("mdn-css.json") as f:
    mdn_css = json.load(f)

def generate_interface(interface):
    file_path = os.path.join(root_dir, "generated", "browser",
        haxerenderer.to_haxe(interface.id)+".hx")
    _logger.debug("Generating %s" % file_path)

    dir_name = os.path.dirname(file_path)
    if not os.path.exists(dir_name):
        _logger.debug("Creating directory %s" % dir_name)
        os.makedirs(dir_name)

    # Render the IDLInterface object into text.
    text = haxerenderer.render(db, interface, mdn_js, mdn_css, header=header)

    with open(file_path, "w") as f:
        f.write(text.encode("utf8"))

for interface in db.GetInterfaces():
    generate_interface(interface)
